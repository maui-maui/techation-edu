  First you can choose to follow me here and get code snippets but at 
the end of each lesson I'll put a file organized by names and folders of 
how to organize it, and add addition comments along the way so look at 
both or just the lesson-1.py file.

Right now before we get started we need to make a few folders and files.

Bot-folder
|
|-->botfile.py
|
|-->cogsfolder
    |
    |-->test.py
|
|-->datafolder
    |
    |-->secrets.json

-----------------------------------------------------------------------------

{IN OUR BOTFILE.PY}
  To get started we are gonna import a few libraries

    from discord.ext import commands
    import json
    import asyncio

  First off we import `from discord.ext import commands` for our bot 
  discord.ext commands. Next we have json because we are gonna make a 
  file.json soon which we will go over then. And last but not least we 
  import asyncio for the asyncio stuff which we will see shortly.

  After that we are gonna add the following code. (This is where our 
  json library comes in handy) 

        with open('datafolder/secrets.json', 'r') as f:
          secrets = json.loads(f.read())

  This comes more into play when we get to SECRETS.JSON section. next we 
  will add our variables we will be using for this file.

        token = secrets['token']
        prefix = secrets['prefix']
        bot = commands.Bot(command_prefix=prefix)

  Now we will do our first bot event.

    @bot.event
    async def on_ready():
        print('\n################')
        print("Bot is online!")
        print('################')
        print('Logged in as:')
        print(bot.user.name)
        print(bot.user.id)
        print('Prefix: ', prefix)
        print('#################\n')

  This will print that info to your terminal or console when your bot is 
  online. Next this part will be to load the TEST.py cog in COGSFOLDER 
  so take note for now.

        #### <-- LOADING COGS --> ####
        bot.load_extension('cogs.test')
        print("COG TEST LOADED")

  And now finally in the end of the code goes

        bot.run(token)

-----------------------------------------------------------------------------

{IN OUR SECRETS.JSON}
  So now in our SECRETS.JSON is the 2 of the 3 things we got from our 
  bot app earlier. 

  {
    "botid":"put the bot id in here",
    "token":"put the bot token in here",
    "prefix":"choose a prefix for your bot here I'm gonna use ':'"
  }

  Don't be confused about this if you are its quite simple. Basically if 
  you haven't used json before its just a dictionary in laymans terms. 

  For the sake of further example of json...

      {"Word":"Value"}

-----------------------------------------------------------------------------

{IN OUR TEST.PY COG}

  This is going to start off fairly simple.


      from discord.ext import commands


      class Test:
      """TESTING COG"""

          def __init__(self, bot):
              self.bot = bot

  You import the library and create a class with the name of your cog. 
  After that def __init__ stuff is just your initial stuff for the bot. 
  I won't be editing that much so no need to pay much attention to it. 
  
  Next will be the actual command which I'll explain more in the 
  lesson-1.py  

           @commands.command(pass_context=True)
           async def test(self, ctx):
              """|  Testing Testing..."""
    
              #Your code will go here
              await self.bot.say(f"Testing is good {authormention}")

  Note in the await self.bot.say part I used and f string from python 
  3.6 so to do it in 3.5 you would replace that line with this.


 await self.bot.say("Testing is good {}".format(ctx.message.author.mention))


  And now to finalize the last bit of the code with this.

      def setup(bot):
          bot.add_cog(Test(bot))  

-----------------------------------------------------------------------------


  To conclude this lesson you want to invite your bot to the server you
  wish to add it to by using the link you made earlier with your bot id. 
  After you see it in the server it should be offline unless you jumped 
  ahead. To bring the bot online you want to open a terminal in that 
  directory and type the following...

      python bot.py

  After you type that you should see your bot come online and it should 
  say something along these lines in your terminal.

################
Bot is online!
################
Logged in as:
BOT NAME HERE
BOT ID HERE
Prefix:  :
#################

  So after your bot is online type in discord this command. By the way 
  [p] basically just means your prefix.

       [p]test

  And the output should be....

     Testing is good @YOUR USERNAME

-----------------------------------------------------------------------------

  This concludes the first lesson of making your own discord bot with 
  cogs. As a summary:

-> We made a main bot file 

-> We made a basic cog called `test`

-> We made a "safe" place for your secure data so you dont have to as 
   cautious with sharing your code.

-----------------------------------------------------------------------------

